import { Channel, OnMessageCallback } from '../Channel';
import { TransportMessage } from '../Message';
export declare abstract class GenericChannel implements Channel {
    private _timeout;
    constructor(_timeout?: number);
    readonly timeout: number;
    protected _onMessageCallbacks: OnMessageCallback[];
    private _onConnectCallbacks;
    private _onDisconnectCallbacks;
    private _onErrorCallbacks;
    private _ready;
    abstract send(message: TransportMessage): void;
    onData(cb: OnMessageCallback): void;
    onConnect(cb: Function): void;
    onDisconnect(cb: Function): void;
    onError(cb: Function): void;
    protected _messageReceived(message: TransportMessage): void;
    protected _error(error: any): void;
    protected _connected(): void;
    protected _disconnected(): void;
}
